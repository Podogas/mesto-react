{"version":3,"sources":["components/Header/Header.js","utils/Api.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/ImagePopup/ImagePopup.js","components/PopupWithForm/PopupWithForm.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","mestoApi","config","this","_url","baseUrl","_headers","headers","err","message","console","error","res","ok","json","Promise","reject","Error","status","fetch","method","then","_checkResponse","all","getUserInfo","getInitialCards","dataToPatch","body","JSON","stringify","name","about","dataToPost","link","cardId","url","avatar","authorization","Card","props","type","onClick","onCardClick","cardData","src","alt","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","React","useEffect","catch","onEditAvatar","style","backgroundImage","onEditProfile","onAddPlace","map","card","handleCardClick","key","_id","Footer","ImagePopup","onClose","PopupWithForm","isOpen","title","noValidate","action","children","btnText","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aee240b6.chunk.js","sourcesContent":["import React from 'react';\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\"></div>\r\n    </header>\r\n)};\r\nexport default Header;  ","class Api{\n  constructor(config){\n    this._url = config.baseUrl;\n    this._headers = config.headers;\n  }\nconsoleError(err, message){\n  console.error(`${message} ${err}`);\n}\n_checkResponse(res){\n  if(res.ok){\n        return res.json();\n      } else {\n        return Promise.reject(new Error(res.status));\n      }\n}\n/*\nметод для получения массива всех карточек с сервера\n */\ngetInitialCards(){\n  return fetch(` ${this._url}/cards`,{\n    headers: this._headers,\n    method: 'GET'}\n    )\n    .then(res => \n      this._checkResponse(res)\n    )\n};\n/*\nметод для получения информации о пользователе с сервера\n */\ngetUserInfo(){\n  return fetch(` ${this._url}/users/me`,{\n    headers: this._headers,\n    method: 'GET'}\n    )\n    .then(res => \n      this._checkResponse(res)\n    )\n};\ngetPageData(){\n  return Promise.all([this.getUserInfo(), this.getInitialCards()])\n}\npatchUserInfo(dataToPatch){\n  return fetch(` ${this._url}/users/me`, {\n    headers: this._headers,\n    method: 'PATCH',\n    body: JSON.stringify({\n      name: dataToPatch.name,\n      about: dataToPatch.about\n    })}\n  )\n  .then(res => \n      this._checkResponse(res)\n    )\n};\npostNewCard(dataToPost){\n  return fetch(`${this._url}/cards`, {\n    headers: this._headers,\n    method: 'POST',\n    body: JSON.stringify({\n      name: dataToPost.name,\n      link: dataToPost.link\n    })}\n   )\n  .then(res => \n      this._checkResponse(res)\n  )\n};\ndeleteCard(cardId){\n  return fetch(`${this._url}/cards/${cardId}`, {\n    headers: this._headers,\n    method: 'DELETE',\n    }\n  )\n  .then(res => \n      this._checkResponse(res)\n  )\n};\nlike(cardId, method){\n  return fetch(`${this._url}/cards/likes/${cardId}`, {\n    headers: this._headers,\n    method: method,\n    }\n  )\n  .then(res => \n      this._checkResponse(res)\n    )\n};  \npatchAvatar(url){\n  return fetch(`${this._url}/users/me/avatar`, {\n    headers: this._headers,\n    method: 'PATCH',\n    body: JSON.stringify({avatar:url})\n    }\n  )\n  .then(res => \n      this._checkResponse(res)\n    )  \n}\n\n};\n\n const mestoApi = new Api ({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: 'd7f02613-0750-4057-8234-33e0d676e4d9',\n    'Content-Type': 'application/json'\n  }\n});\nexport default mestoApi;","import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardClick(props.cardData);\r\n  }\r\n  return (\r\n    <article className=\"element\">\r\n      <button className=\"element__trash-can\" type=\"button\"></button>\r\n      <div className=\"element__image-wrap\" onClick={handleClick}>\r\n        <img className=\"element__image\" src={props.cardData.link} alt={props.cardData.name}/>\r\n      </div>\r\n      <h3 className=\"element__caption\">{props.cardData.name}</h3>\r\n      <div className=\"element__like-wrapper\">\r\n        <button className=\"element__like-button\" type=\"button\"></button>\r\n        <span className=\"element__like-counter\">{props.cardData.likes.length}</span>\r\n      </div>\r\n    </article> \r\n)};\r\nexport default Card;  ","import React , { useState }  from 'react';\r\nimport mestoApi from '../../utils/Api.js';\r\nimport Card from '../Card/Card.js'\r\n\r\n\r\nfunction Main(props) {\r\nconst [userName, setUserName] = useState();\r\nconst [userDescription, setUserDescription] = useState();\r\nconst [userAvatar, setUserAvatar] = useState();\r\nconst [cards, setCards] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    mestoApi.getUserInfo().then((res)=>{\r\n      setUserName(res.name);\r\n      setUserDescription(res.about);\r\n      setUserAvatar(res.avatar);\r\n    })\r\n    .catch( err => console.error(`Ошибка при загрузке данных пользователя ${err}` ));\r\n  }, []);\r\n  React.useEffect(() => {\r\n    mestoApi.getInitialCards().then((res)=>{\r\n      setCards(res);\r\n    })\r\n    .catch( err => console.error(`Ошибка при загрузке фотографий ${err}` ));;\r\n  }, []);       \r\n\r\n     \r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar\" onClick={props.onEditAvatar} style={{ backgroundImage: `url(${userAvatar})` }} ></div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{userName}</h1>\r\n          <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\r\n          <p className=\"profile__job\">{userDescription}</p>\r\n        </div>\r\n        <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n\r\n  { cards.map((card)=>(\r\n      <Card cardData = {card} onCardClick = {props.handleCardClick} key={card._id} ></Card>  \r\n    ))\r\n  }\r\n  </section>\r\n\r\n      \r\n\r\n    </main>\r\n  )};\r\nexport default Main;  ","import React from 'react';\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&#xa9; Александр Подогас</p>\r\n    </footer>\r\n)};\r\nexport default Footer;  ","import React from 'react';\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section className={`popup popup__photo-browsing ${(props.card)? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__window popup__window_photo-browsing\">\r\n        <button className=\"popup__close-btn popup__close-btn_photo-browsing\" type=\"button\" onClick={props.onClose}></button>\r\n        <img className=\"popup__image-photo-browsing\"  alt={props.card.name} src={props.card.link}/>\r\n        <span className=\"popup__caption-photo-browsing\">{props.card.name}</span>\r\n      </div>\r\n    </section>\r\n)};\r\nexport default ImagePopup;  \r\n","import React from 'react';\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__window\">\r\n        <button className={`popup__close-btn popup__close-btn_${props.name}`} type=\"button\" onClick={props.onClose}></button>\r\n        <h2 className={`popup__heading popup__heading_${props.name}`}>{props.title}</h2>\r\n        <form noValidate className={`popup__input-container popup__input-container_${props.name}`} name={props.name} method=\"post\" action=\"\">\r\n          {props.children}\r\n          <button type=\"submit\" className={`popup__submit-btn popup__submit-btn_${props.name}`}>{props.btnText}</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n)};\r\nexport default PopupWithForm;  \r\n\r\n","import React , { useState } from 'react';\nimport Header from '../Header/Header.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n\n  const handleEditProfileClick = ()=>{\n   setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  const handleAddPlaceClick = ()=>{\n   setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  const handleEditAvatarClick = ()=>{\n   setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  const closeAllPopups = ()=>{\n   setIsEditProfilePopupOpen(false)\n   setIsAddPlacePopupOpen(false);\n   setIsEditAvatarPopupOpen(false);\n   setSelectedCard(false);\n  }\n  const handleCardClick =(card)=>{\n    setSelectedCard(card)\n  }\n  return (\n  <>\n  <div className=\"page\">\n    <Header/>\n    <Main onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          handleCardClick ={handleCardClick}\n          />\n      <PopupWithForm name=\"edit-profile\" title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} btnText=\"Сохранить\">\n          <input type=\"text\" name=\"name\" id=\"profileNameInput\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required\n          className=\"popup__input-item popup__input-item_edit-profile\" />\n          <span className=\"popup__input-error-message\" id=\"profileNameInput-err\"></span>\n          <input type=\"text\" name=\"about\" id=\"profileJobInput\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required \n          className=\"popup__input-item popup__input-item_edit-profile\" />\n          <span className=\"popup__input-error-message\" id=\"profileJobInput-err\"></span>   \n      </PopupWithForm>\n      <PopupWithForm name=\"add-photo\" title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} btnText=\"Сохранить\">\n        <input type=\"text\" name=\"photoName\" id=\"photoNameInput\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required className=\"popup__input-item popup__input-item_add-photo\" />\n        <span className=\"popup__input-error-message\" id=\"photoNameInput-err\"></span>\n        <input type=\"url\" name=\"photoUrl\" id=\"photoUrlInput\" placeholder=\"Ссылка на картинку\" required className=\"popup__input-item popup__input-item_add-photo\" />\n        <span className=\"popup__input-error-message\" id=\"photoUrlInput-err\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} btnText=\"Сохранить\">\n        <input type=\"url\" name=\"avatarUrl\" id=\"avatarUrlInput\" placeholder=\"Ссылка на картинку\" required className=\"popup__input-item popup__input-item_edit-avatar\" />\n        <span className=\"popup__input-error-message\" id=\"avatarUrlInput-err\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"confirm-deletion\" title=\"Вы уверены?\" btnText=\"Да\">\n      </PopupWithForm>          \n    <Footer/>\n    <ImagePopup card={selectedCard} onClose={closeAllPopups}></ImagePopup>\n   </div>  \n\n\n\n    \n\n    \n\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}